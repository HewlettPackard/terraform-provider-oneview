dist: trusty
sudo: required

notifications:
    email: false

language: go
go_import_path: github.com/HewlettPackard/terraform-provider-oneview

go:
    - 1.11

env:
    global:
        - BUILDNAME=terraform-provider-oneview
        - TF_DOWNLOAD_PATH=./bins
        - TF_PLATFORMS="linux"
        - CGO_ENABLED=0
        - GOARCH=amd64
        - REPO=$DOCKER_USERNAME/terraform-provider-oneview
        - TAG=$(if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo "branch-${TRAVIS_BRANCH}"; fi)
        - UNFORMATTED=$(find . -type f -name "*.go" -not -path "./vendor/*" | sed "s|^\./||" | xargs gofmt -l)

install:
    - mkdir -p $TF_DOWNLOAD_PATH
    - bash <(curl -s https://raw.githubusercontent.com/patrickdappollonio/download-terraform-binaries/master/download_terraform_binaries.sh)

before_script:
    - if ! [ -z "$UNFORMATTED" ]; then
        echo -e "Go files must be formatted with gofmt. Please run:";
        for fn in $UNFORMATTED; do
        echo -e "  gofmt -w $PWD/$fn";
        done;
        exit 1;
      fi

script:
    # Standard Go testing avoiding the testing of the vendor folder.
    - go vet $(go list ./... | grep -v '/vendor/')
    - go test -v $(go list ./... | grep -v '/vendor/')

    # Build disabling CGO and getting a statically linked binary.
    - GOOS=linux go build -a -tags netgo -ldflags '-s -w' -o $TF_DOWNLOAD_PATH/linux/$BUILDNAME

    # Create the docker image from the Dockerfile.
    - docker build -f Dockerfile -t $REPO:$TAG .

    # Run a Sanity Check against an empty terraform file. When
    # ran, it should fail if the compilation was unsuccessful.
    - docker run -it --rm=true $REPO:$TAG /bin/bash -c "echo '' >> /demo.tf && cd / && /usr/local/terraform/terraform plan"

after_success:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then
        docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
        docker push $REPO;
      fi
